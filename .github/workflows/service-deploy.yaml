name: Front Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    name: react build & deploy
    runs-on: ubuntu-latest

    steps:
      # 레포지토리에 접근하여 CI 서버로 코드를 내려받는 과정입니다.
      - name: Checkout repository
        uses: actions/checkout@v3

      # yarn의 캐시를 설정합니다.
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            service/.yarn/cache
            service/.yarn/build-state.yml
            service/.pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies with Yarn
        working-directory: ./service
        run: yarn install --immutable

      - name: Build the project
        working-directory: ./service
        run: yarn build

      - name: echo test
        run: |
          echo ${{ secrets.AWS_ARN }}

      # AWS에 접근하기 위한 권한을 받아옵니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ARN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # S3에 build 파일을 올립니다.
      - name: Upload to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME_A }}
        run: |
          aws s3 sync ./service/build s3://$BUCKET_NAME --delete

      # CloudFront 캐시 무효화
      - name: CloudFront Invalidation
        env:
          CLOUD_FRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID_A }}
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUD_FRONT_ID --paths "/*"
